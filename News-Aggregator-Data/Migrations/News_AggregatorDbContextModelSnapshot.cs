// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using News_Aggregator_Data;

#nullable disable

namespace News_Aggregator_Data.Migrations
{
    [DbContext(typeof(News_AggregatorDbContext))]
    partial class News_AggregatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("News_Aggregator_Data.Entities.ARticle", b =>
                {
                    b.Property<Guid>("AR_art_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AR_art_status")
                        .HasColumnType("bit");

                    b.Property<string>("AR_content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AR_positivity")
                        .HasColumnType("int");

                    b.Property<string>("AR_source_adr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AR_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AR_art_id");

                    b.HasIndex("AR_user_id");

                    b.ToTable("ARticles");
                });

            modelBuilder.Entity("News_Aggregator_Data.Entities.COmment", b =>
                {
                    b.Property<Guid>("CO_comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CO_art_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CO_comm_status")
                        .HasColumnType("bit");

                    b.Property<string>("CO_comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CO_user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CO_comment_id");

                    b.HasIndex("CO_art_id");

                    b.HasIndex("CO_user_id");

                    b.ToTable("COmments");
                });

            modelBuilder.Entity("News_Aggregator_Data.Entities.USer", b =>
                {
                    b.Property<Guid>("US_user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("US_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("US_positivity_treshold")
                        .HasColumnType("int");

                    b.Property<string>("US_user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("US_user_role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("US_user_status")
                        .HasColumnType("bit");

                    b.HasKey("US_user_id");

                    b.ToTable("USers");
                });

            modelBuilder.Entity("News_Aggregator_Data.Entities.ARticle", b =>
                {
                    b.HasOne("News_Aggregator_Data.Entities.USer", "USers")
                        .WithMany("ARticles")
                        .HasForeignKey("AR_user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("USers");
                });

            modelBuilder.Entity("News_Aggregator_Data.Entities.COmment", b =>
                {
                    b.HasOne("News_Aggregator_Data.Entities.ARticle", "ARticle")
                        .WithMany("COmments")
                        .HasForeignKey("CO_art_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("News_Aggregator_Data.Entities.USer", "USer")
                        .WithMany("COmments")
                        .HasForeignKey("CO_user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ARticle");

                    b.Navigation("USer");
                });

            modelBuilder.Entity("News_Aggregator_Data.Entities.ARticle", b =>
                {
                    b.Navigation("COmments");
                });

            modelBuilder.Entity("News_Aggregator_Data.Entities.USer", b =>
                {
                    b.Navigation("ARticles");

                    b.Navigation("COmments");
                });
#pragma warning restore 612, 618
        }
    }
}
